language: bash
services: docker
before_install: 
  - docker pull mcr.microsoft.com/dotnet/core/sdk:3.0.100-preview8-alpine3.9
jobs:
  include:
    - stage: test
      name: "unit tests"
      script: docker run --rm -v `pwd`:/app mcr.microsoft.com/dotnet/core/sdk:3.0.100-preview8-alpine3.9 sh -c "cd /app; dotnet test"
    - stage: test
      name: "build package"
      script: docker run --rm -v `pwd`:/app mcr.microsoft.com/dotnet/core/sdk:3.0.100-preview8-alpine3.9 sh -c "cd /app; dotnet build"
    - stage: test
      name: "postman tests"
      language: node_js
      node_js: 
        - "12"
      script:
        - echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_LOGIN" --password-stdin
        - docker build . -t fossapps/micro.starter  --build-arg VERSION=`git rev-parse --short=4 ${CIRCLE_SHA1}`
        - docker run -it --rm -d -p 5000:5000 fossapps/micro.starter
        - sh ./Micro.Starter.UnitTest/ExternalTests/postman_tests.sh
        - docker tag fossapps/micro.starter fossapps/micro.starter:`git rev-parse --short=4 ${CIRCLE_SHA1}`
        - docker push fossapps/micro.starter:`git rev-parse --short=4 ${CIRCLE_SHA1}`
    - stage: deploy
      name: "semantic-release"
      language: node_js
      node_js: 
        - "12"
      script:
        - npm i @semantic-release/exec
        - npx semantic-release
